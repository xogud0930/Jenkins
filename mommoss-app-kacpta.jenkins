pipeline {
    agent { node 'master' }
    environment {
        MAIN = "mommoss-app-kacpta"
        ACTION = "${sh(returnStdout: true, script: 'echo ${HOOK_REF%/*}')}" 
        HOOK_BRANCH = "${sh(returnStdout: true, script: 'echo ${HOOK_REF#*/}')}" 
        BRANCH = "${env.COMMIT_MSG ? env.HOOK_BRANCH : params.TEST_BRANCH}"
    }
    tools {
        nodejs "node16"
        git "git"
    }
    stages {
        stage('prepare') {
            steps {
                sh '''#!/bin/bash
                    echo Date : $TODAY
                    echo Action : $ACTION
                    if [[ "$ACTION" =~ "tags" ]]; then
                        TYPE="tags"
                        echo Tags : $BRANCH
                    else
                        TYPE="branch"
                        echo Branch : $BRANCH
                    fi

                    if [ "$ADD_PUSH" == "true" ]; then
                        COMMIT_MSG="Created $BRANCH $TYPE"
                    elif [ "$DEL_PUSH" == "true" ]; then
                        COMMIT_MSG="Deleted $BRANCH $TYPE"
                    fi
                    
                    echo Commit : $COMMIT_MSG
                    MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\n$COMMIT_AUTHOR\n20${TODAY:0:2}-${TODAY:2:2}-${TODAY:4:2} ${TODAY:7:2}:${TODAY:9:2}:${TODAY:11:2}\n============Commit============\n$COMMIT_MSG\n==============================="
                    cd ../noticeMommoss
                    node noticeMommoss.js 20 "$MSG"
                '''
            }
        }
        stage('git clone') {
            steps {
                sh '''#!/bin/bash
                    if [ ! -d ./$MAIN ]; then
                        git clone git@github.com:Ablestor/mommoss-app-kacpta.git
                    else
                        echo "$MAIN OK"
                    fi
                ''' 
            }
        }
        stage('git pull') {
            steps {
                sh '''#!/bin/bash
                    cd $MAIN

                    git fetch --all
                    git reset --hard origin/$BRANCH
                    git pull $BRANCH
                    
                    if [ "$COMMIT_ID" != "none" ]; then
                        echo $COMMIT_MSG
                        git checkout $COMMIT_ID
                    fi
                    
                    npm install
                    expo login -u dev@ablestor.com -p $EXPO_PSW
                '''
            }
        }
        stage('build') {
            when { expression { return env.ACTION.trim()=="heads" && env.DEL_PUSH=="false" } }
            steps {
                sh'''#!/bin/bash
                    cd $MAIN

                    echo "COMMIT : $COMMIT_MSG"
                    MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\nMommoss App jenkins OK🙆‍♂️"

                    if [[ "$BRANCH" =~ "master" ]]; then
                        echo "expo master branch publish"
                        expo publish --release-channel default
                        MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\nMain channel publish success🙆‍♂️"
                    elif [[ "$BRANCH" =~ "develop" ]]; then
                        echo "expo develop branch publish"
                        expo publish --release-channel test
                        MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\nTest channel publish success🙆‍♂️"
                    fi

                    cd ../../noticeMommoss
                    node noticeMommoss.js 20 "$MSG"
                '''
            }
        }
    }
    post {
        failure {
            sh'''#!/bin/bash
            echo "Build failed"
            MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\nMommoss App jenkins failed❌"
            cd ../noticeMommoss
            node noticeMommoss.js 20 "$MSG"
            '''
        }
        aborted {
            sh'''#!/bin/bash
            echo "build aborted"
            MSG="💡[Jenkins]💡\n🐙Mommoss App🐙\nMommoss App jenkins aborted⛔"
            cd ../noticeMommoss
            node noticeMommoss.js 20 "$MSG"
            '''
        }
    }
}